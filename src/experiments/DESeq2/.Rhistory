## Add unfiltered categories ##
if (exists("dfUnfiltered") & (nrow(dfUnfiltered) > 0)){
df.db.table <- unique(
rbind(
dfUnfiltered,
df.db.table
)
)
}
dim(df.db.table)
#df.db.table <- df.db.table[df.db.table$cat_weight > 0.3,]
#dim(df.db.table)
df.ref <- import.db.table.from.db(
dbname = Obio@parameterList$ref.cat.db,
dbtable = Obio@parameterList$lab.categories.table,
password = db.pwd
)
## Remove all project temp categories from df.ref
df.ref <- df.ref[grep(paste0("temp_", Obio@parameterList$project_id), df.ref$cat_type),]
if (exists("df.ref") & nrow(df.ref) > 0){
df.temp <- add2labCatSelectionDBtable(
df.ref = df.ref,
cat_group_name = "This project",
reference.gene.vector = reference.gene.vector,
ref.gene.vec.id = Obio@parameterList$geneIDcolumn,
cat_views = NA
)
df.db.table <- rbind(df.temp, df.db.table)
}
## Done adding temp categories associated with this project
###############################################################################
###############################################################################
## Upload to database                                                        ##
###############################################################################
upload.datatable.to.database(
host = Obio@parameterList$host,
user = Obio@parameterList$db.user,
password = db.pwd,
prim.data.db = Obio@parameterList$cat.ref.db,
dbTableName = Obio@parameterList$cat.ref.db.table,
df.data = df.db.table,
db.col.parameter.list = list(
"VARCHAR(255) CHARACTER SET utf8 COLLATE utf8_general_ci" = c("comments_1","cat_name"),
"VARCHAR(50) CHARACTER SET utf8 COLLATE utf8_general_ci" = c("cat_id", "cat_group"),
"VARCHAR(1) CHARACTER SET utf8 COLLATE utf8_general_ci" = c("ppos", "amino_acid", "charge","known_site"),
"BIGINT(8) NULL DEFAULT NULL" = c("row_names"),
"INT(8) NULL DEFAULT NULL" = c("cat_item_size", "cat_count", "cat_views"),
"DECIMAL(6,3) NULL DEFAULT NULL" = c("cat_weight"),
"DECIMAL(6,5) NULL DEFAULT NULL" = c("padj", "pvalue","^pep$")
),
new.table = TRUE
)
##  End creating reference category selection for this project               ##
###############################################################################
Obio@parameterList$geneIDcolumn <- "dr_symbol"
## Color samples by sample group ##
# Get sample order from database.table
## oder samples according to PC1
# df.pca <- df.pca[order(df.pca$pca1, decreasing = FALSE),]
# sample.order <- paste0("norm_counts_", df.pca$sample_id)
sample.order <- sort(names(Obio@databaseTable)[grep("norm_counts_", names(Obio@databaseTable))])
paste0("sample.order <- c('",paste(sample.order, collapse = "','"),"')")
sample.order <- c(
'norm_counts_SE_neg_1_TPM',
'norm_counts_SE_neg_2_TPM',
'norm_counts_SE_neg_3_TPM',
'norm_counts_SE_neg_4_TPM',
'norm_counts_SE_neg_5_TPM',
'norm_counts_PE_neg_1_TPM',
'norm_counts_PE_neg_2_TPM',
'norm_counts_PE_neg_3_TPM',
'norm_counts_PE_neg_4_TPM',
'norm_counts_PE_neg_5_TPM',
'norm_counts_SE_SOX10_1_TPM',
'norm_counts_SE_SOX10_2_TPM',
'norm_counts_SE_SOX10_3_TPM',
'norm_counts_SE_SOX10_4_TPM',
'norm_counts_SE_SOX10_5_TPM',
'norm_counts_PE_SOX10_1_TPM',
'norm_counts_PE_SOX10_2_TPM',
'norm_counts_PE_SOX10_3_TPM',
'norm_counts_PE_SOX10_4_TPM',
'norm_counts_PE_SOX10_5_TPM'
)
## Sort database.table ##
orderVec <- names(Obio@databaseTable)
lg2Order <- gsub("norm_counts_", "lg2_avg_", sample.order)
orderVec <- orderVec[!(orderVec %in% sample.order)]
orderVec <- orderVec[!(orderVec %in% lg2Order)]
orderVec <- c(
orderVec,
sample.order,
lg2Order
)
Obio@databaseTable <- Obio@databaseTable[,orderVec]
## Get relevant colors ##
sample.colors <- sample.order
sample.colors <- gsub("_TPM", "", sample.colors)
sample.colors <- substr(sample.colors, 1, nchar(sample.colors)-2)
sample.colors <- gsub("_$", "", sample.colors)
color.groups <- unique(sample.colors)
#dfDesign[["sample_color"]] <- "orange"
nSampleGroups <- length(unique(color.groups))
library(RColorBrewer)
selcol <- colorRampPalette(brewer.pal(12,"Set3"))
color.sel = selcol(nSampleGroups)
for (i in 1:length(color.groups)){
sample.colors[grep(color.groups[i], sample.colors)] <- color.sel[i]
}
if (!exists("gsea.cat.lines")){
gsea.cat.lines <- ""
downloadCatEnrichmentFNxlsx <- ""
} else {
downloadCatEnrichmentFNxlsx <- paste0("outputs/", Obio@parameterList$project.code, ".enriched.categories.txt")
}
if (!exists("timecourse.cat.lines")){
timecourse.cat.lines <- NA
}
#library(SBwebtools)
setwd(Obio@parameterList$localWorkDir)
#library(SBwebtools)
webSiteDir <- Obio@parameterList$localWorkDir
project.code <- gsub("vpl", "p", Obio@parameterList$project_id)
create.website.parameters(
df.data = Obio@databaseTable,
gene.id.column = Obio@parameterList$geneIDcolumn,
ptm.colum = "",
lab_id = "ref",
user_ids = Obio@parameterList$user_ids,
project_id = Obio@parameterList$project_id,
download_result_table = paste0("outputs/", project.code, ".result.table.txt"),
download_cat_enrichment_table = downloadCatEnrichmentFNxlsx,
database = Obio@parameterList$primDataDB,
reference_categories_db = "reference_categories_db_new",
labname = Obio@parameterList$labname,
rnaseqdbTableName = Obio@parameterList$rnaseqdbTableName,
lab.categories.table = Obio@parameterList$lab.categories.table,
sample.order = sample.order, #set to "" to go with default sorting
count.sample.colors = sample.colors,
count.table.headline = Obio@parameterList$count.table.headline,
count.table.sidelabel = Obio@parameterList$count.table.sidelabel,
webSiteDir = webSiteDir,
heamap.headline.text = Obio@parameterList$heamap.headline.text,
upper_heatmap_limit = 3,
lower_heatmap_limit = -3,
slider.selection.name = "logFC",
presentation.file = paste0("outputs/", Obio@parameterList$project_id, ".project.presentation.pptx"),
number_of_slides = 7,
default.sequence = "",
use.logFC.columns.for.heatmap = FALSE,
peptide.view.link = "",
create.2d.scatterplot.button = TRUE,
low_highlight = -1,
high_highlight =1,
display.qc = TRUE,
display.pca = TRUE,
display.report = TRUE,
pca.table.name = Obio@parameterList$PCAdbTableName,
gsea.cat.lines = gsea.cat.lines,
timecourse.cat.lines = timecourse.cat.lines,
venn.slider.selector.strings = c(
"_logFC",
"contrast_1_padj",
"contrast_2_padj",
"contrast_3_padj",
"contrast_4_padj",
"lg10p_LRT"
),
plot.selection.strings = c(
"_logFC",
"_PCA_",
"_lg10p",
"contrast_P_PCA_estimatePCA"
), #NA, #strings to grep from col names for plot display
plate.view.db.table = NA,
plate.view.column.vec = NA,
cat.seletion.table.vec = c(Obio@parameterList$cat.ref.db, Obio@parameterList$cat.ref.db.table)
)
mWVec <- c(
"cp -r ../GSEA/enrichment_plots/ .",
"cp -r ../RSEM/Ensembl/multiqc_report.html .",
"cp -r /camp/stp/babs/working/boeings/Stefan/protocol_files/github/boeings/biologic/GD_bulkRNA_seq/* .",
paste0("mv outputs/p999.project.presentation.pptx outputs/", project.code, ".project.presentation.pptx"),
"cp ../../outputs/*xl* ./outputs/",
"cp ../DESeq2/MA* ./outputs/",
"cp ../DESeq2/PCA* ./outputs/",
"cp ../heatmap.col.* ./outputs/",
"cp ../DESeq2/covariance.plot.* ./report_figures"
)
setwd(paste0(Obio@parameterList$localWorkDir, "/", Obio@parameterList$project_id))
sink("assembleMicrowebsite.sh")
for (i in 1:length(mWVec)){
cat(mWVec[i]);cat("\n");
}
sink()
## Done assembling microwebsite                                              ##
###############################################################################
###############################################################################
## Deploy next generation website                                            ##
createSettingsFile(
obj = Obio,
df.data = Obio@databaseTable,
primDataTable = Obio@parameterList$rnaseqdbTableName,
sample.order = sample.order, #set to "" to go with default sorting
heatmapSampleOrder = "",
sample.names = "", # default is sample.order
count.sample.colors = sample.colors,
ptm.colum = "",
count.table.headline = Obio@parameterList$count.table.headline,
count.table.sidelabel = Obio@parameterList$count.table.sidelabel,
venn.slider.selector.strings = c(
"_logFC",
"_PCA_",
"contrast_1_padj",
"contrast_2_padj",
"contrast_3_padj",
"contrast_4_padj",
"_lg10p_LRT"
),
plot.selection.strings = c(
"_logFC",
"_lg10p",
"_PCA_"
),
webSiteDir = paste0(hpc.mount, "Stefan/protocol_files/github/biologic/src/experiments/"),
upper_heatmap_limit = 3,
lower_heatmap_limit = -3,
heamap.headline.text = Obio@parameterList$heamap.headline.text,
project_id = Obio@parameterList$project_id
)
names(Obio@databaseTable)
dfDat <- unique(
Obio@databaseTable[,c(Obio@parameterList$geneIDcolumn, "CoVar", "CoVarOrder")]
)
head(dfDat)
dfDat <- dfDat[order(dfDat$CoVarOrder),]
head(dfDat)
ggplot(
data=dfDat,
aex(x=CoVarOrder, y=CoVar)
) + geom_point()
ggplot(
data=dfDat,
aes(x=CoVarOrder, y=CoVar)
) + geom_point()
ggplot(
data=dfDat,
aes(x=CoVarOrder, y=CoVar)
) + geom_line()
head(dfDat)
Obio@plotCollection[["CoVar"]] <- ggplot(
data=dfDat,
aes(x=CoVarOrder, y=CoVar)
) + geom_line()
ggplot(
data=dfDat,
aes(x=CoVarOrder, y=CoVar)
) + geom_line() +
geom_vline(xintercept = 500, color = "black", size=0.5
) + geom_hline(yintercept = 0, color = "black", size=0.5
)
ggplot(
data=dfDat,
aes(x=CoVarOrder, y=CoVar)
) + geom_line() +
geom_vline(xintercept = 0, color = "black", size=0.5
) + geom_vline(xintercept = 0, color = "black", size=0.5
) +  geom_hline(yintercept = 0, color = "black", size=0.5
)
ggplot(
data=dfDat,
aes(x=CoVarOrder, y=CoVar)
) + geom_line() +
geom_vline(xintercept = 0, color = "black", size=0.5
) + geom_vline(xintercept = 500, color = "grey", size=0.5
) +  geom_hline(yintercept = 0, color = "black", size=0.5
)
ggplot(
data=dfDat,
aes(x=CoVarOrder, y=CoVar)
) + geom_line() +
geom_vline(xintercept = 0, color = "black", size=0.5
) + geom_vline(xintercept = 500, color = "red", size=0.5
) +  geom_hline(yintercept = 0, color = "black", size=0.5
)
ggplot(
data=dfDat,
aes(x=CoVarOrder, y=CoVar)
) + geom_line() +
geom_vline(xintercept = 0, color = "black", size=0.5
) + geom_vline(xintercept = 500, color = "red", size=0.5
) + geom_hline(yintercept = 0, color = "black", size=0.5
) + labs(title = "Coefficient of Variation",x = "Genes", y = "Coefficient of Variation"
)
ggplot(
data=dfDat,
aes(x=CoVarOrder, y=CoVar)
) + geom_line() +
geom_vline(xintercept = 0, color = "black", size=0.5
) + geom_vline(xintercept = 500, color = "red", size=0.5
) + geom_hline(yintercept = 0, color = "black", size=0.5
) + labs(title = "Coefficient of Variation",x = "Genes", y = "Coefficient of Variation"
)+  theme(
axis.text.y   = element_text(size=8),
axis.text.x   = element_text(size=8),
axis.title.y  = element_text(size=8),
axis.title.x  = element_text(size=8),
axis.line = element_line(colour = "black"),
panel.border = element_rect(colour = "black", fill=NA, size=1),
plot.title = element_text(hjust = 0.5, size = 12)
)
dfDat <- dfDat[dfDat$CoVar != 0,]
ggplot(
data=dfDat,
aes(x=CoVarOrder, y=CoVar)
) + geom_line() +
geom_vline(xintercept = 0, color = "black", size=0.5
) + geom_vline(xintercept = 500, color = "red", size=0.5
) + geom_hline(yintercept = 0, color = "black", size=0.5
) + labs(title = "Coefficient of Variation",x = "Genes", y = "Coefficient of Variation"
)+  theme(
axis.text.y   = element_text(size=8),
axis.text.x   = element_text(size=8),
axis.title.y  = element_text(size=8),
axis.title.x  = element_text(size=8),
axis.line = element_line(colour = "black"),
panel.border = element_rect(colour = "black", fill=NA, size=1),
plot.title = element_text(hjust = 0.5, size = 12)
)
Obio@plotCollection[["CoVar"]] <- ggplot(
data=dfDat,
aes(x=CoVarOrder, y=CoVar)
) + geom_line() +
geom_vline(xintercept = 0, color = "black", size=0.5
) + geom_vline(xintercept = 500, color = "red", size=0.5
) + geom_hline(yintercept = 0, color = "black", size=0.5
) + labs(title = "Coefficient of Variation",x = "Genes", y = "Coefficient of Variation"
)+  theme(
axis.text.y   = element_text(size=8),
axis.text.x   = element_text(size=8),
axis.title.y  = element_text(size=8),
axis.title.x  = element_text(size=8),
axis.line = element_line(colour = "black"),
panel.border = element_rect(colour = "black", fill=NA, size=1),
plot.title = element_text(hjust = 0.5, size = 12)
)
## Switch to mgi symbols ##
Obio@parameterList$geneIDcolumn <- "hgnc_symbol"
## List all available reference tables ##
list.db.tables.in.db(
dbname = "reference_categories_db_new",
password = db.pwd
)
labCatName <-  paste0(Obio@parameterList$labname, " Lab")
Obio@referenceTableList <- list(
"Hallmark Signatures" = "mysigdb_h_hallmarks",
"Pathways" = "mysigdb_c2_1329_canonical_pathways",
"GO-BP" = "mysigdb_c5_BP",
"GO-MF" = "mysigdb_c5_MF",
"TF Motifs" = "TRANSFAC_and_JASPAR_PWMs",
"Protein Complexes" = "networkcategories"
)
Obio@referenceTableList[[labCatName]] <- Obio@parameterList$lab.categories.table
## Define relevant genes for selection ##
relevant.genes <- as.vector(
unique(
Obio@databaseTable[Obio@databaseTable$cluster_order, Obio@parameterList$geneIDcolumn]
)
)
length(relevant.genes)
for (i in 1:length(Obio@referenceTableList)) {
df.ref <- import.db.table.from.db(
dbname = Obio@parameterList$ref.cat.db,
dbtable = Obio@referenceTableList[[i]],
password = db.pwd
)
## Remove temp categories ##
temPos <- grep("temp_", df.ref$cat_type)
if (length(temPos) > 0) {
df.ref <- df.ref[-temPos,]
}
df.temp <- add2labCatSelectionDBtable(
df.ref = df.ref,
cat_group_name = names(Obio@referenceTableList)[i],
reference.gene.vector = relevant.genes,
ref.gene.vec.id = Obio@parameterList$geneIDcolumn,
cat_views = NA
)
if (i == 1) {
df.db.table <- df.temp
} else {
df.db.table <- rbind(df.temp, df.db.table)
}
}
###############################################################################
## Filter cat dataset                                                        ##
###############################################################################
## Remove all datasets with less than 5 proteins matched
catIdGroupsExemptFromFiltering <- c(
Obio@parameterList$lab.categories.table
)
dfUnfiltered <- df.db.table[as.vector(unlist(sapply(catIdGroupsExemptFromFiltering, function(x) grep(x, df.db.table$cat_id)))),]
dim(df.db.table)
df.db.table <- df.db.table[df.db.table$cat_count >= 5,]
dim(df.db.table)
## Add unfiltered categories ##
if (exists("dfUnfiltered") & (nrow(dfUnfiltered) > 0)){
df.db.table <- unique(
rbind(
dfUnfiltered,
df.db.table
)
)
}
dim(df.db.table)
#df.db.table <- df.db.table[df.db.table$cat_weight > 0.3,]
#dim(df.db.table)
###############################################################################
## Add full temp categories associated with this project                     ##
## Lab categories ##
df.ref <- import.db.table.from.db(
dbname = Obio@parameterList$ref.cat.db,
dbtable = Obio@parameterList$lab.categories.table,
password = db.pwd
)
## Remove all project temp categories from df.ref
df.ref <- df.ref[grep(paste0("temp_", Obio@parameterList$project_id), df.ref$cat_type),]
if (exists("df.ref") & nrow(df.ref) > 0){
df.temp <- add2labCatSelectionDBtable(
df.ref = df.ref,
cat_group_name = "This project",
reference.gene.vector = reference.gene.vector,
ref.gene.vec.id = Obio@parameterList$geneIDcolumn,
cat_views = NA
)
df.db.table <- rbind(df.temp, df.db.table)
}
## Done adding temp categories associated with this project
###############################################################################
Obio <- add2vec(
obj = Obio,
slot_name = "scriptVec",
value = tempShellScriptVector
)
## Done adding environment                                                   ##
###############################################################################
###############################################################################
## Save workspace and object                                                 ##
ObioObjectFN <- paste0(
Obio@parameterList$outputDir,
Obio@parameterList$project_id,
".bioLOGIC.object.RData"
)
save(Obio, file = ObioObjectFN)
?knittr::opts_chunk
?knitr::opts_chunk
if (dir.exists("/Volumes/babs/working/boeings/")){
hpc.mount <- "/Volumes/babs/working/boeings/"
} else if (dir.exists("Y:/working/boeings/")){
hpc.mount <- "Y:/working/boeings/"
} else if (dir.exists("/camp/stp/babs/working/boeings/")){
hpc.mount <- "/camp/stp/babs/working/boeings/"
} else {
hpc.mount <- ""
}
paste0(
Obio@parameterList$outputDir,
Obio@parameterList$project_id,
".bioLOGIC.object.RData"
)
objectFN <- paste0(
hpc.mount,
"/Projects/pachnisv/tiffany.heanue/308_VPL_TH_RNAseq_zebrafish_enteric_neurons_RN18076_SE_PE/outputs/vpl308.bioLOGIC.object.RData")
load(objectFN)
library(DT)
dfDesign <- Obio@dfDesign
selVec <- c(
'sampleID',
'original.sample.id',
'comp_1',
'comp_2',
'comp_3',
'comp_4',
'LRT_PE_SE',
'LRT_Sox10_Neg'
)
dfDesign <- unique(dfDesign[,selVec])
dfDesign <- Obio@dfDesign
names(dfDesign)
selVec <- c(
'sampleID',
'original.sample.id',
'comp_1',
'LRT_Sox10_Neg'
)
dfDesign <- unique(dfDesign[,selVec])
colnames <- gsub("_", " ", names(dfDesign))
colnames <- gsub("comp", "DGE", colnames)
colnames <- gsub("[.]", " ", colnames)
colnames
source(
paste0(
hpc.mount,
"Stefan/protocol_files/github/boeings/packages/cDev.package.SBwebtools.V7.r"
)
)
Obio <- doPCA(
obj = Obio,
pcaDimensionsToInvestigate <- c(1:10),
Ntop4pca = 500
)
print(Obio@plotCollection$dendrogram10000)
